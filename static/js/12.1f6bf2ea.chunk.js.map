{"version":3,"sources":["config/constants/newnfts.ts","utils/formatBalance.ts","utils/erc20.ts","hooks/useBlock.ts","utils/callHelpers.ts","hooks/useTokenBalance.ts","hooks/useApprove.ts","hooks/useAllowance.ts","../node_modules/lodash/orderBy.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/identity.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","views/NewNft/components/InfoRow.tsx","views/NewNft/components/Image.tsx","views/NewNft/utils/contracts.ts","views/NewNft/contexts/NftProvider.tsx","views/NewNft/components/ClaimNftModal.tsx","views/NewNft/components/BurnNftModal.tsx","views/NewNft/components/TransferNftModal.tsx","views/NewNft/components/NftCard/index.tsx","views/NewNft/components/NftGrid.tsx","views/NewNft/components/NftList.tsx","views/NewNft/components/NftProgressSimple.tsx","views/NewNft/components/NftInfo.tsx","views/NewNft/index.tsx"],"names":["NftFarm","NFT","AMOUNT_TO_CLAIM","Nfts","name","metadata","description","previewImage","originalImage","fileType","blurImage","sortOrder","nftId","tokenAmount","tokenSupply","nftFarmContract","nftContract","rarity","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","useBlock","useContext","BlockContext","approve","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","res","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useNftApprove","tokenContract","spenderAddress","useNftAllowance","dependency","setAllowance","console","log","fetch","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","undefined","isObject","key","srcValue","object","Object","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","length","iteratee","index","result","other","baseMatches","baseMatchesProperty","property","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","customizer","noCustomizer","data","objValue","stack","COMPARE_PARTIAL_FLAG","isStrictComparable","keys","get","hasIn","isKey","toKey","path","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","baseEach","isArrayLike","Array","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","eachFunc","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","InfoRow","styled","div","Container","theme","colors","borderColor","StyledImage","img","Image","src","alt","originalLink","href","target","rel","getNftContract","contractOptions","nftAbi","nft","getNewNftContract","nftFarm","getToFloat","v","t","i","push","parseInt","getToInt","parseFloat","NftProviderContext","createContext","NftProvider","children","isMounted","useRef","isInitialized","hasClaimed","countBurnt","startBlockNumber","endBlockNumber","totalSupplyDistributed","currentDistributedSupply","nftMap","allowMultipleClaims","priceMultiplier","maxMintPerNft","tokenPerBurn","amounts","myMints","isApproved","state","setState","currentBlock","prevState","error","fetchContractData","multicall","nftFarmV2","params","getMinted","isApprovedForAll","getTokenIdAndNftId","tokenOfOwnerByIndex","tokenId","getNftId","getMaxMint","newFarmContract","nftInfoState","maxMint","tokenIdPromises","maxMintPromises","forEach","Promise","all","tokenIdsOwnedByWallet","maxMintArray","_","sum","reduce","accum","association","fetchNonLoggedInContractData","current","canBurnNft","Provider","getTokenIds","reInitialize","Value","Text","ModalContent","Actions","ClaimNftModal","onSuccess","onDismiss","price","isLoading","setIsLoading","pendingTx","setPendingTx","setError","TranslateString","useI18n","nftMintingContract","useNFTFarmV2Contract","contraToken","useERC20","cakeBalance","cakeInWallet","handleConfirm","mint","title","round","color","mb","fullWidth","disabled","onClick","BurnNftModal","tokenIds","accepted","setAccepted","useRabbitMintingFarm","burnNFT","style","alignItems","display","checked","scale","onChange","ml","cursor","variant","Label","label","text","TransferNftModal","values","setValues","NFTFarmV2Contract","utils","isAddress","getTradeIdByNftId","tradeId","transfer","htmlFor","id","type","placeholder","evt","inputValue","isWarning","Header","DetailsButton","Button","attrs","InfoBlock","ViewNft","NftCard","isOpen","nftCount","nftBurnCount","minted","setMinted","setMaxMint","setPrice","history","useHistory","setRequestedApproval","firstCharOfAccount","slice","lastCharOfAccount","loggedIn","nftIndex","indexOf","MINTS","MINTED","walletCanClaim","mintedValue","maxMintValue","priceValue","getNftInfoState","isSupplyAvailable","walletOwnsNft","Icon","ChevronUpIcon","ChevronDownIcon","fetchDetails","isDataFetched","handleClick","usePancakeRabbits","handleApprove","setApprovalForAll","handleSuccess","useModal","onPresentClaimModal","onPresentTransferModal","isActive","outline","mt","p","endIcon","width","as","textAlign","NftGrid","BaseLayout","mediaQueries","sm","NftList","nfts","orderBy","map","NftProgressSimple","NftInfo","StyledHero","textSubtle","Nft","NFTs","setNFTs","filteredNFTs","filter","filterNFTs","Page","size"],"mappings":"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","file":"static/js/12.1f6bf2ea.chunk.js","sourcesContent":["import { Nft } from './types'\r\n\r\nexport const NftFarm = '0xABf2Fb308f3614ECcFa4352Bc874Ef09ABaA7151'\r\nexport const NFT = '0xf426F0aFaf912105C119CbD69aedc9e98643d0A1'\r\nexport const AMOUNT_TO_CLAIM = '10'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Pink Spider',\r\n    metadata: 'tier-NFT-base-dark-chocolate.json',\r\n    description: 'Laws are spider webs through which the big flies pass and the little ones get caught. Honore de Balzac',\r\n    previewImage: 'pink-spider-min.png',\r\n    originalImage:\r\n      'https://gateway.pinata.cloud/ipfs/QmZRVNLGYbjh2DaPuqcaQi51wXSjaxzGjAg24WviM5N8Tj',\r\n    fileType: 'png',\r\n    blurImage: '',\r\n    sortOrder: 0,\r\n    nftId: 100,\r\n    tokenAmount: 10,\r\n    tokenSupply: 2222,\r\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n    rarity: 'Base',\r\n  },\r\n  // {\r\n  //   name: 'Pink Fox',\r\n  //   metadata: 'tier-NFT-base-main-nopaint.json',\r\n  //   description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'pink-fox-min.png',\r\n  //   originalImage:\r\n  //     'https://gateway.pinata.cloud/ipfs/QmeDaRUcV3bp5oa6juNYYrV9G7o2zcKFcrRBJmPJxe6BQL',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 1,\r\n  //   nftId: 101,\r\n  //   tokenAmount: 10,\r\n  //   tokenSupply: 2222,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n  // {\r\n  //   name: 'Pink Bunny',\r\n  //   metadata: 'tier-NFT-base-marble.json',\r\n  //   description:\r\n  //     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'pink-bunny-min.png',\r\n  //   originalImage: 'https://gateway.pinata.cloud/ipfs/QmWh9xNZvyhzQWFp4xFEjbBBXPBuZhYnQufL2HwRBae9Gn',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 2,\r\n  //   nftId: 102,\r\n  //   tokenAmount: 10,\r\n  //   tokenSupply: 2222,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n  // {\r\n  //   name: 'Pink Dragon',\r\n  //   metadata: '',\r\n  //   description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'pink-dragon-min.png',\r\n  //   originalImage:\r\n  //     'https://gateway.pinata.cloud/ipfs/QmUBgkzR5rSLiWH9pgDACayjAQLcCfB8Csn81PVbTdB86t',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 3,\r\n  //   nftId: 103,\r\n  //   tokenAmount: 100,\r\n  //   tokenSupply: 666,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n  // {\r\n  //   name: 'Pink B&B',\r\n  //   metadata: '',\r\n  //   description:\r\n  //     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'bull-and-bear-min.png',\r\n  //   originalImage:\r\n  //     'https://gateway.pinata.cloud/ipfs/QmQ8MkJZzAQYNnUmzVXFmBQAZTXSjjvdvGVF3f16HP7LLW',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 4,\r\n  //   nftId: 104,\r\n  //   tokenAmount: 100,\r\n  //   tokenSupply: 666,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n]\r\n\r\nexport default Nfts\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract(erc20 as unknown as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n\r\n// Approve an NFT\r\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve NFT allowance\r\nexport const useNftAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.log(e.toString())\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import styled from 'styled-components'\r\n\r\nconst InfoRow = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default InfoRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ImageProps {\r\n  src: string\r\n  alt: string\r\n  originalLink?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  position: relative;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 100%;\r\n`\r\n\r\nconst StyledImage = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transition: opacity 1s linear;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 32px 32px 0 0;\r\n`\r\n\r\nconst Image: React.FC<ImageProps> = ({ src, alt, originalLink }) => {\r\n  const previewImage = <StyledImage src={src} alt={alt} />\r\n\r\n  return (\r\n    <Container>\r\n      {originalLink ? (\r\n        <a href={originalLink} target=\"_blank\" rel=\"noreferrer noopener\">\r\n          {previewImage}\r\n        </a>\r\n      ) : (\r\n        previewImage\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import { AbiItem, fromWei } from 'web3-utils'\r\nimport { getContract } from 'utils/web3'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport nftFarm from 'config/abi/NftFarmV2.json'\r\nimport nft from 'config/abi/NFT.json'\r\nimport { NftFarm, NFT } from 'config/constants/newnfts'\r\nimport BigNumber from 'bignumber.js'\r\n// TODO: Figure out how to add current account to contracts to write methods can be used\r\n\r\nexport const getNftMintingContract = (contractOptions?: ContractOptions) => {\r\n  const nftMintingFarmAbi = nftFarm as unknown as AbiItem\r\n  return getContract(nftMintingFarmAbi, NftFarm, contractOptions)\r\n}\r\n\r\nexport const getNftContract = (contractOptions?: ContractOptions) => {\r\n  const nftAbi = nft as unknown as AbiItem\r\n  return getContract(nftAbi, NFT, contractOptions)\r\n}\r\n\r\nexport const getNewNftContract = (contractOptions?: ContractOptions) => {\r\n  const nftAbi = nftFarm as unknown as AbiItem\r\n  return getContract(nftAbi, NftFarm, contractOptions)\r\n}\r\n\r\nexport const getFromWei = (v: any) => {\r\n  if (!v) return 0\r\n  return parseFloat(fromWei(v.toString(), 'ether'))\r\n}\r\n\r\nexport const getFromWayArray = (v: any) => {\r\n  if (!v) return []\r\n  const array = []\r\n  const t = v.length\r\n  for (let i = 0; i < t; i++) {\r\n    if (!v[i]) {\r\n      array.push(0)\r\n    } else {\r\n      array.push(fromWei(v[i].toString(), 'ether'))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport const getToFloat = (v: any) => {\r\n  if (!v) return []\r\n  const array = []\r\n  if (!v) return []\r\n  const t = v.length\r\n  for (let i = 0; i < t; i++) {\r\n    if (!v[i]) {\r\n      array.push(0)\r\n    } else {\r\n      array.push(parseInt(v[i].toString()))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport const getToInt = (v: any) => {\r\n  const array = []\r\n  if (!v) return []\r\n  const t = v.length\r\n  for (let i = 0; i < t; i++) {\r\n    if (!v[i]) {\r\n      array.push(0)\r\n    } else {\r\n      array.push(parseFloat(v[i].toString()))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport default getNftMintingContract\r\n","import React, { createContext, ReactNode, useEffect, useRef, useState } from 'react'\r\nimport _ from 'lodash'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useBlock from 'hooks/useBlock'\r\nimport nftFarmV2 from 'config/abi/NftFarmV2.json'\r\nimport Nfts, { NftFarm } from 'config/constants/newnfts'\r\nimport multicall from 'utils/multicall'\r\nimport { getNftContract, getFromWei, getToFloat, getToInt, getFromWayArray, getNewNftContract } from '../utils/contracts'\r\n\r\ninterface NftProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\ntype NftMap = {\r\n  [key: number]: number[]\r\n}\r\n\r\ntype State = {\r\n  isInitialized: boolean\r\n  hasClaimed: number[]\r\n  amounts: number[]\r\n  myMints: number[]\r\n  countBurnt: number\r\n  endBlockNumber: number\r\n  startBlockNumber: number\r\n  totalSupplyDistributed: number\r\n  currentDistributedSupply: number\r\n  balanceOf: number\r\n  nftMap: NftMap\r\n\r\n  allowMultipleClaims: boolean\r\n  rarity: string\r\n  priceMultiplier: number\r\n  maxMintPerNft: number\r\n  tokenPerBurn: number\r\n  isApproved: boolean\r\n}\r\n\r\ntype Context = {\r\n  canBurnNft: boolean\r\n  getTokenIds: (nftId: number) => number[]\r\n  reInitialize: () => void\r\n} & State\r\n\r\nexport const NftProviderContext = createContext<Context | null>(null)\r\n\r\nconst NftProvider: React.FC<NftProviderProps> = ({ children }) => {\r\n  const isMounted = useRef(true)\r\n  const [state, setState] = useState<State>({\r\n    isInitialized: false,\r\n    hasClaimed: [],\r\n    countBurnt: 0,\r\n    startBlockNumber: 0,\r\n    endBlockNumber: 0,\r\n    totalSupplyDistributed: 0,\r\n    currentDistributedSupply: 0,\r\n    balanceOf: 0,\r\n    nftMap: {},\r\n\r\n    allowMultipleClaims: true,\r\n    rarity: '',\r\n    priceMultiplier: 0,\r\n    maxMintPerNft: 0,\r\n    tokenPerBurn: 0,\r\n\r\n    amounts: [],\r\n    myMints: [],\r\n    isApproved: false,\r\n  })\r\n  const { account } = useWallet()\r\n  const currentBlock = useBlock()\r\n\r\n  const { isInitialized } = state\r\n\r\n  // Static data\r\n  useEffect(() => {\r\n    const fetchContractData = async () => {\r\n      try {\r\n        // const [\r\n        //   // startBlockNumberArr,\r\n        //   // endBlockNumberArr,\r\n        //   // countBurntArr,\r\n        //   // totalSupplyDistributedArr,\r\n        //   // currentDistributedSupplyArr,\r\n\r\n        //   // allowMultipleClaimsArr,\r\n        //   // rarityArr,\r\n        //   // priceMultiplierArr,\r\n        //   // maxMintPerNftArr,\r\n        //   // tokenPerBurnArr,\r\n        // ] = await multicall(nftFarm, [\r\n        //   // { address: NftFarm, name: 'startBlockNumber' },\r\n        //   // { address: NftFarm, name: 'endBlockNumber' },\r\n        //   // { address: NftFarm, name: 'countBurnt' },\r\n        //   // { address: NftFarm, name: 'totalSupplyDistributed' },\r\n        //   // { address: NftFarm, name: 'currentDistributedSupply' },\r\n        //   // { address: NftFarm, name: 'allowMultipleClaims' },\r\n        //   // { address: NftFarm, name: 'rarity' },\r\n        //   // { address: NftFarm, name: 'priceMultiplier' },\r\n        //   // { address: NftFarm, name: 'maxMintPerNft' },\r\n        //   // { address: NftFarm, name: 'tokenPerBurn' },\r\n        // ])\r\n\r\n        // TODO: Figure out why these are coming back as arrays\r\n        // const [startBlockNumber]: [BigNumber] = startBlockNumberArr\r\n        // const [endBlockNumber]: [BigNumber] = endBlockNumberArr\r\n        // const [countBurnt]: [BigNumber] = countBurntArr\r\n        // const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\r\n        // const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isInitialized: true,\r\n          // countBurnt: countBurnt.toNumber(),\r\n          // startBlockNumber: startBlockNumber.toNumber(),\r\n          // endBlockNumber: endBlockNumber.toNumber(),\r\n          // currentDistributedSupply: currentDistributedSupply.toNumber(),\r\n          // totalSupplyDistributed: totalSupplyDistributed.toNumber(),\r\n          // allowMultipleClaims: allowMultipleClaimsArr[0],\r\n          // rarity: rarityArr[0].toString(),\r\n          // priceMultiplier: parseFloat(priceMultiplierArr[0].toString()),\r\n          // maxMintPerNft: parseInt(maxMintPerNftArr[0].toString()),\r\n          // tokenPerBurn: getFromWei(tokenPerBurnArr[0]),\r\n        }))\r\n      } catch (error) {\r\n        console.error('an error occured', error)\r\n      }\r\n    }\r\n\r\n    fetchContractData()\r\n  }, [isInitialized, setState])\r\n\r\n  // Data from the contract that needs an account\r\n  useEffect(() => {\r\n    const fetchContractData = async () => {\r\n      try {\r\n        const nftContract = getNftContract()\r\n\r\n        const getMinted = await multicall(nftFarmV2, [{ address: NftFarm, name: 'getMinted', params: [account] }])\r\n\r\n        const hasClaimed = getMinted[0][0]\r\n        const amounts = getToFloat(getMinted[0][1])\r\n        const myMints = getToInt(getMinted[0][2])\r\n\r\n\r\n        // console.log('hasClaimed', hasClaimed)\r\n\r\n        const balanceOf = await nftContract.methods.balanceOf(account).call()\r\n\r\n        let nftMap: NftMap = {}\r\n\r\n        const isApproved = await nftContract.methods.isApprovedForAll(account, NftFarm).call()\r\n        // If the \"balanceOf\" is greater than 0 then retrieve the tokenIds\r\n        // owned by the wallet, then the nftId's associated with the tokenIds\r\n        if (balanceOf > 0) {\r\n          const getTokenIdAndNftId = async (index: number) => {\r\n            try {\r\n              const tokenId = await nftContract.methods.tokenOfOwnerByIndex(account, index).call()\r\n              const nftId = await nftContract.methods.getNftId(tokenId).call()\r\n\r\n              return [parseInt(nftId, 10), parseInt(tokenId, 10)]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const getMaxMint = async (nftId: number) => {\r\n            try {\r\n              const newFarmContract = getNewNftContract()\r\n              const nftInfoState = await newFarmContract.methods.nftInfoState(nftId).call()\r\n              const { maxMint } = nftInfoState\r\n              return parseInt(maxMint)\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n          const maxMintPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndNftId(i))\r\n          }\r\n\r\n          Nfts.forEach((nft) => {\r\n            maxMintPromises.push(getMaxMint(nft.nftId))\r\n          });\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n          const maxMintArray = await Promise.all(maxMintPromises)\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            totalSupplyDistributed: _.sum(maxMintArray),\r\n            currentDistributedSupply: _.sum(myMints)\r\n          }))\r\n\r\n          // While improbable a wallet can own more than one of the same nft so the format is:\r\n          // { [nftId]: [array of tokenIds] }\r\n          nftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [nftId, tokenId] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [nftId]: accum[nftId] ? [...accum[nftId], tokenId] : [tokenId],\r\n            }\r\n          }, {})\r\n        }\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isInitialized: true,\r\n          hasClaimed,\r\n          balanceOf,\r\n          nftMap,\r\n\r\n          amounts,\r\n          myMints,\r\n          isApproved\r\n        }))\r\n      } catch (error) {\r\n        console.error('an error occured', error)\r\n      }\r\n    }\r\n\r\n    const fetchNonLoggedInContractData = async () => {\r\n      try {\r\n        const getMinted = await multicall(nftFarmV2, [\r\n          { address: NftFarm, name: 'getMinted', params: ['0x0000000000000000000000000000000000000000'] },\r\n        ])\r\n        const hasClaimed = getMinted[0][0]\r\n        const amounts = getToFloat(getMinted[0][1])\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isInitialized: true,\r\n          hasClaimed,\r\n          amounts,\r\n        }))\r\n      } catch (error) {\r\n        console.error('an error occured', error)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchContractData()\r\n    } else {\r\n      fetchNonLoggedInContractData()\r\n    }\r\n  }, [isInitialized, account, setState])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false\r\n    }\r\n  }, [isMounted])\r\n\r\n  const canBurnNft = currentBlock <= state.endBlockNumber\r\n  const getTokenIds = (nftId: number) => state.nftMap[nftId]\r\n\r\n  /**\r\n   * Allows consumers to re-fetch all data from the contract. Triggers the effects.\r\n   * For example when a transaction has been completed\r\n   */\r\n  const reInitialize = () => {\r\n    // Only attempt to re-initialize if the component is still mounted\r\n    // Transactions can take awhile so it is likely some users will navigate to another page\r\n    // before the transaction is finished\r\n    if (isMounted.current) {\r\n      setState((prevState) => ({ ...prevState, isInitialized: false }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NftProviderContext.Provider value={{ ...state, canBurnNft, getTokenIds, reInitialize }}>\r\n      {children}\r\n    </NftProviderContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NftProvider\r\n","import React, { useEffect, useState } from 'react'\r\nimport _ from 'lodash'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BigNumber from 'bignumber.js'\r\nimport { NftFarm, AMOUNT_TO_CLAIM } from 'config/constants/newnfts'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useERC20, useNFTFarmV2Contract } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\nimport { useNftAllowance } from '../../../hooks/useAllowance'\r\nimport { useNftApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ClaimNftModalProps {\r\n  nft: Nft\r\n  onSuccess: () => any\r\n  onDismiss?: () => void,\r\n  price?: BigNumber\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss, price }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const nftMintingContract = useNFTFarmV2Contract(NftFarm)\r\n  const contraToken = useERC20(getCakeAddress())\r\n  const allowance = useNftAllowance(contraToken, NftFarm, pendingTx)\r\n  const onApprove = useNftApprove(contraToken, NftFarm)\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const cakeInWallet = getBalanceNumber(cakeBalance)\r\n\r\n  // console.log('getCakeAddress', getCakeAddress(), NftFarm, allowance)\r\n  // console.log('allowance', allowance)\r\n\r\n  const handleConfirm = async () => {\r\n    if (allowance === null) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      await nftMintingContract.methods\r\n        .mint(nft.nftId)\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          onDismiss()\r\n          onSuccess()\r\n        })\r\n        .on('error', () => {\r\n          console.error(error)\r\n          setError('Unable to claim NFT')\r\n          setIsLoading(false)\r\n        })\r\n    } catch (err) {\r\n      console.error('Unable to mint NFT:', err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cakeInWallet === 0) {\r\n      setError(`You must have ALIFE balance to claim NFT`)\r\n    }\r\n  }, [cakeInWallet, setError])\r\n\r\n  return (\r\n    <Modal title={`Claim NFT for ${_.round(parseFloat(price.toString()))} ALIFE`} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button\r\n          fullWidth\r\n          disabled={!account || pendingTx || isLoading || allowance > 0}\r\n          onClick={async () => {\r\n            try {\r\n              setPendingTx(true)\r\n              await onApprove()\r\n              setPendingTx(false)\r\n            } catch (e) {\r\n              setPendingTx(false)\r\n              console.error(e)\r\n            }\r\n          }}\r\n        >\r\n          Approve\r\n        </Button>\r\n\r\n        <Button\r\n          fullWidth\r\n          onClick={handleConfirm}\r\n          disabled={!account || isLoading || cakeInWallet <= 0 || allowance <= 0}\r\n        >\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimNftModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Checkbox, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport { NftFarm, AMOUNT_TO_CLAIM } from 'config/constants/newnfts'\r\nimport { useRabbitMintingFarm } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface BurnNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst BurnNftModal: React.FC<BurnNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [accepted, setAccepted] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const nftMintingContract = useRabbitMintingFarm(NftFarm)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const [tokenId] = tokenIds\r\n\r\n      await nftMintingContract.methods\r\n        .burnNFT(tokenId)\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          onDismiss()\r\n          onSuccess()\r\n        })\r\n        .on('error', () => {\r\n          console.error(error)\r\n          setError('Unable to burn NFT')\r\n          setIsLoading(false)\r\n        })\r\n    } catch (err) {\r\n      console.error('Unable to burn NFT:', err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Trade in NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Trade in')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\r\n          <Value>${AMOUNT_TO_CLAIM} ALIFE</Value>\r\n        </InfoRow>\r\n      </ModalContent>\r\n      <ModalContent>\r\n        <Text color=\"failure\">\r\n          {TranslateString(999, 'When you trade in this NFT to receive ALIFE, you will lose access to it forever!')}\r\n        </Text>\r\n        <Text color=\"failure\">{TranslateString(999, 'It will be burned and removed from circulation')}</Text>\r\n      </ModalContent>\r\n      <ModalContent style={{ alignItems: 'center', display: 'inline-flex' }}>\r\n        <Checkbox checked={accepted} scale=\"sm\" onChange={() => setAccepted(!accepted)} />\r\n        <Text ml=\"8px\" onClick={() => setAccepted(!accepted)} style={{ cursor: 'pointer' }}>\r\n          {TranslateString(999, 'I understand')}\r\n        </Text>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !accepted}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BurnNftModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Web3 from 'web3'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Input, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport { NFT, NftFarm } from 'config/constants/newnfts'\r\nimport { Nft } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useNFTFarmV2Contract } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface TransferNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  margin-top: 24px;\r\n`\r\n// tokenIds is retrieved dynamically from contracts.\r\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [values, setValues] = useState({\r\n    address: '',\r\n    tokenId: tokenIds[0],\r\n  })\r\n  const [error, setError] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n\r\n  const NFTFarmV2Contract = useNFTFarmV2Contract(NftFarm)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const isValidAddress = Web3.utils.isAddress(values.address)\r\n\r\n      if (!isValidAddress) {\r\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\r\n      } else {\r\n        const tradeId = await NFTFarmV2Contract.methods.getTradeIdByNftId(account, nft.nftId).call()\r\n        await NFTFarmV2Contract.methods\r\n          .transfer(tradeId, values.address)\r\n          .send({ from: account })\r\n          .on('sending', () => {\r\n            setIsLoading(true)\r\n          })\r\n          .on('receipt', () => {\r\n            onDismiss()\r\n            onSuccess()\r\n          })\r\n          .on('error', () => {\r\n            console.error(error)\r\n            setError('Unable to transfer NFT')\r\n            setIsLoading(false)\r\n          })\r\n      }\r\n    } catch (err) {\r\n      console.error('Unable to transfer NFT:', err)\r\n    }\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue, name } = evt.target\r\n    setValues({ ...values, [name]: inputValue })\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\r\n        <Input\r\n          id=\"transferAddress\"\r\n          name=\"address\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(999, 'Paste address')}\r\n          value={values.address}\r\n          onChange={handleChange}\r\n          isWarning={error}\r\n          disabled={isLoading}\r\n        />\r\n        {/* <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Token ID')}:</Label>\r\n        <Input\r\n          id=\"tokenId\"\r\n          name=\"tokenId\"\r\n          type=\"number\"\r\n          placeholder={TranslateString(999, 'Enter tokenId')}\r\n          value={values.tokenId}\r\n          onChange={handleChange}\r\n          isWarning={error}\r\n          disabled={isLoading}\r\n        /> */}\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          onClick={handleConfirm}\r\n          disabled={!account || isLoading || !values.address || !values.tokenId}\r\n        >\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransferNftModal\r\n","import React, { useState, useContext, useCallback, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n} from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport { AMOUNT_TO_CLAIM, NftFarm, NFT } from 'config/constants/newnfts'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport InfoRow from '../InfoRow'\r\nimport Image from '../Image'\r\nimport { NftProviderContext } from '../../contexts/NftProvider'\r\nimport { getNewNftContract } from '../../utils/contracts'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport BurnNftModal from '../BurnNftModal'\r\nimport TransferNftModal from '../TransferNftModal'\r\n\r\ninterface NftCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 44px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 0 24px 24px;\r\n`\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ViewNft = styled(Text)`\r\n  @media (max-width: 1300px) {\r\n    font-size: 11px;\r\n  }\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isOpen: false,\r\n    nftCount: 0,\r\n    nftBurnCount: 0,\r\n  })\r\n  const [minted, setMinted] = useState(0)\r\n  const [maxMint, setMaxMint] = useState(0)\r\n  const [price, setPrice] = useState(new BigNumber(0))\r\n  const TranslateString = useI18n()\r\n  const {\r\n    isInitialized,\r\n    hasClaimed,\r\n    canBurnNft,\r\n    totalSupplyDistributed,\r\n    currentDistributedSupply,\r\n    getTokenIds,\r\n    reInitialize,\r\n    allowMultipleClaims,\r\n    rarity,\r\n    priceMultiplier,\r\n    maxMintPerNft,\r\n    tokenPerBurn,\r\n    amounts,\r\n    myMints,\r\n    isApproved,\r\n  } = useContext(NftProviderContext)\r\n  const { account } = useWallet()\r\n  const history = useHistory()\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const [error, setError] = useState(null)\r\n  // maxMintPerNft limit max amount that a nft can be minted\r\n  // maxMintByNft array containing individual amount of mint per nft index\r\n  // prices array containing individual prices of a mint per nft index\r\n  // tokenPerBurn global price\r\n\r\n  const { nftId, name, previewImage, originalImage, description, tokenAmount, tokenSupply } = nft\r\n\r\n  const firstCharOfAccount = account != null && account.slice(0, 4)\r\n  const lastCharOfAccount = account != null && account.slice(-4)\r\n\r\n  const accountName = account != null && `${firstCharOfAccount}...${lastCharOfAccount}`\r\n\r\n  const loggedIn = account !== null\r\n\r\n  // console.log('?hasClaimed', hasClaimed)\r\n  // console.log('?ownerById', ownerById)\r\n\r\n  const nftIndex = hasClaimed && hasClaimed.indexOf(nftId)\r\n\r\n  const MINTS = myMints[nftIndex] || 0\r\n\r\n  // not sure about this, you need to check if this oser own this nft in the view nft page.\r\n  // const youAreTheLastOwner = ownerById && ownerById[nftIndex] && ownerById[nftIndex].toString() === account.toString()\r\n\r\n  const MINTED = amounts[nftIndex] ? parseInt(amounts[nftIndex].toString()) : 0\r\n\r\n  const walletCanClaim = MINTED === undefined || MINTED < maxMint\r\n\r\n  // console.log('CONTRACT/GALLERY INFO:', totalSupplyDistributed, rarity, priceMultiplier, maxMintPerNft, tokenPerBurn)\r\n  // console.log('LIMITS BY NFT:', tokenPerBurn, amounts, maxMintByNft, prices)\r\n  // console.log(nftId, 'walletCanClaim', walletCanClaim, maxMintPerNft, MINTED, MAX_MINT)\r\n\r\n  const tokenIds = getTokenIds(nftId)\r\n  // const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\r\n\r\n  useEffect(() => {\r\n    const getNftInfoState = async () => {\r\n      const newFarmContract = getNewNftContract()\r\n      const nftInfoState = await newFarmContract.methods.nftInfoState(nftId).call()\r\n      const { minted: mintedValue, maxMint: maxMintValue, price: priceValue } = nftInfoState\r\n      setMinted(parseInt(mintedValue))\r\n      setMaxMint(parseInt(maxMintValue))\r\n      setPrice(new BigNumber(priceValue).div(new BigNumber(10).pow(18)))\r\n    }\r\n    getNftInfoState()\r\n  }, [nftId, isInitialized])\r\n\r\n  const isSupplyAvailable = minted < maxMint\r\n  // const walletOwnsNft = tokenIds && tokenIds.length > 0\r\n  const walletOwnsNft = MINTS > 0\r\n\r\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    setState((prevState) => ({ ...prevState, isLoading: true }))\r\n    try {\r\n      const { methods } = getNewNftContract()\r\n      const nftCount = await methods.nftCount(nftId).call()\r\n      const nftBurnCount = await methods.nftBurnCount(nftId).call()\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n        nftCount: parseInt(nftCount, 10),\r\n        nftBurnCount: parseInt(nftBurnCount, 10),\r\n      }))\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }, [nftId])\r\n\r\n  const handleClick = async () => {\r\n    if (state.isOpen) {\r\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n    } else {\r\n      try {\r\n        await fetchDetails()\r\n      } catch (err) {\r\n        console.error(err)\r\n      } finally {\r\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const nftContract = usePancakeRabbits(NFT)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setState((prevState) => ({ ...prevState, isLoading: true }))\r\n      setRequestedApproval(true)\r\n      await nftContract.methods\r\n        .setApprovalForAll(NftFarm, 'true')\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          console.log('receipt')\r\n        })\r\n        .on('error', () => {\r\n          setError('Unable to transfer NFT')\r\n          setIsLoading(false)\r\n        })\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n      }))\r\n\r\n      fetchDetails()\r\n      reInitialize()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [account, nftContract, reInitialize, fetchDetails])\r\n\r\n  const handleSuccess = () => {\r\n    fetchDetails()\r\n    reInitialize()\r\n  }\r\n\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} price={price} onSuccess={handleSuccess} />)\r\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\r\n  const [onPresentTransferModal] = useModal(\r\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\r\n  )\r\n\r\n  return (\r\n    <Card isActive={walletOwnsNft}>\r\n      <Image src={`/images/nfts/${previewImage}`} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\r\n      <CardBody>\r\n        <Header>\r\n          <Heading>{name}</Heading>\r\n          {isInitialized && walletCanClaim && (\r\n            <Tag outline variant=\"success\">\r\n              {TranslateString(526, 'Available')}\r\n            </Tag>\r\n          )}\r\n          {isInitialized && !walletCanClaim && (\r\n            <Tag outline variant=\"failure\">\r\n              Sold Out\r\n            </Tag>\r\n          )}\r\n          {isInitialized && loggedIn && walletOwnsNft && (\r\n            <Tag outline variant=\"secondary\">\r\n              {TranslateString(999, 'In Wallet')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {isInitialized && loggedIn && walletOwnsNft && !isApproved && (\r\n          <Button\r\n            fullWidth\r\n            variant=\"primary\"\r\n            mt=\"24px\"\r\n            onClick={() => {\r\n              handleApprove()\r\n            }}\r\n          >\r\n            Approve Transfer\r\n          </Button>\r\n        )}\r\n        {isInitialized && loggedIn && walletOwnsNft && isApproved && (\r\n          <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {TranslateString(999, 'Transfer')}\r\n          </Button>\r\n        )}\r\n        {isInitialized && loggedIn && walletCanClaim && isSupplyAvailable && (\r\n          <Button fullWidth onClick={onPresentClaimModal} mt=\"24px\">\r\n            {TranslateString(999, 'Claim this NFT')} for {_.round(parseFloat(price.toString()))} ALIFE\r\n          </Button>\r\n        )}\r\n        {isInitialized && (\r\n          <Button fullWidth onClick={() => history.push(`shibari-detail/${nftId}`)} mt=\"24px\">\r\n            <ViewNft>\r\n              View NFT ({MINTED}/{maxMint} MINTED)\r\n            </ViewNft>\r\n          </Button>\r\n        )}\r\n        {/* {isInitialized && canBurnNft && walletOwnsNft && (\r\n          <Button variant=\"danger\" fullWidth onClick={onPresentBurnModal} mt=\"24px\">\r\n            {TranslateString(999, 'Trade in for ALIFE')}\r\n          </Button>\r\n        )} */}\r\n      </CardBody>\r\n      <CardFooter p=\"0\">\r\n        <DetailsButton endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\r\n          {state.isLoading ? TranslateString(999, 'Loading...') : TranslateString(999, 'Details')}\r\n        </DetailsButton>\r\n        {state.isOpen && (\r\n          <InfoBlock>\r\n            <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'center' }}>\r\n              {description}\r\n            </Text>\r\n            <InfoRow>\r\n              <Text>{TranslateString(999, 'Number minted')}:</Text>\r\n              <Value>\r\n                {MINTED}/{maxMint}\r\n              </Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Text>Owned By Me:</Text>\r\n              <Value>{MINTS}</Value>\r\n            </InfoRow>\r\n          </InfoBlock>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n","import styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\n\r\nconst NftGrid = styled(BaseLayout)`\r\n  padding-bottom: 24px;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    grid-column: 2 / 6;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      grid-column: span 4;\r\n    }\r\n  }\r\n`\r\n\r\nexport default NftGrid\r\n","import React from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport NftCard from './NftCard'\r\nimport NftGrid from './NftGrid'\r\n\r\nconst NftList = (props) => {\r\n  const { data: nfts } = props\r\n  return (\r\n    <NftGrid>\r\n      {orderBy(nfts, 'sortOrder').map((nft) => (\r\n        <div key={nft.nftId}>\r\n          <NftCard nft={nft} />\r\n        </div>\r\n      ))}\r\n    </NftGrid>\r\n  )\r\n}\r\n\r\nexport default NftList\r\n","import React, { useContext } from 'react'\r\nimport { Card, CardBody, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { NftProviderContext } from '../contexts/NftProvider'\r\nimport InfoRow from './InfoRow'\r\n\r\nconst NftProgressSimple = () => {\r\n  const TranslateString = useI18n()\r\n  const { isInitialized, currentDistributedSupply, totalSupplyDistributed, countBurnt } = useContext(NftProviderContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Total Pink Shibari Collection Claimed')}:</Text>\r\n          <Text>\r\n            <strong>{!isInitialized ? '...' : `${currentDistributedSupply}/${totalSupplyDistributed}`}</strong>\r\n          </Text>\r\n        </InfoRow>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftProgressSimple\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { NftProviderContext } from '../contexts/NftProvider'\r\nimport NftProgress from './NftProgress'\r\nimport NftProgressSimple from './NftProgressSimple'\r\nimport StatusCard from './StatusCard'\r\n\r\nconst StyledNtfInfo = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst NftInfo = () => {\r\n  const { canBurnNft } = useContext(NftProviderContext)\r\n\r\n  return <NftProgressSimple />\r\n}\r\n\r\nexport default NftInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport { Link } from 'react-router-dom'\r\nimport nfts from 'config/constants/newnfts'\r\nimport NftList from './components/NftList'\r\nimport NftProvider from './contexts/NftProvider'\r\nimport NftInfo from './components/NftInfo'\r\n\r\nconst StyledHero = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst CustomButton = styled(Button)`\r\n  margin-right: 20px;\r\n`\r\n\r\nconst GoldenButton = styled(Button)`\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(110, 80, 20, 0.4), inset 0 -2px 5px 1px rgba(139, 66, 8, 1),\r\n    inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\r\n  background-image: linear-gradient(160deg, #a54e07, #b47e11, #fef1a2, #bc881b, #a54e07);\r\n  border: 1px solid #a55d07;\r\n  color: rgb(120, 50, 5);\r\n  text-shadow: 0 2px 2px rgba(250, 227, 133, 1);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  background-size: 100% 100%;\r\n  background-position: center;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    background-size: 150% 150%;\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23), inset 0 -2px 5px 1px #b17d10,\r\n      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\r\n    border: 1px solid rgba(165, 93, 7, 0.6);\r\n    color: rgba(120, 50, 5, 0.8);\r\n  }\r\n  &:active {\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(110, 80, 20, 0.4), inset 0 -2px 5px 1px #b17d10,\r\n      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\r\n  }\r\n`\r\n\r\nconst Nft = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  const [NFTs, setNFTs] = useState(nfts)\r\n\r\n  const filterNFTs = (rarity: string) => {\r\n    const filteredNFTs = nfts.filter((nft) => nft.rarity === rarity)\r\n    setNFTs(filteredNFTs)\r\n  }\r\n\r\n  useEffect(() => {\r\n    filterNFTs('Base')\r\n  }, [])\r\n\r\n  return (\r\n    <NftProvider>\r\n      <Page>\r\n        <StyledHero>\r\n          <Heading as=\"h1\" size=\"xl\" color=\"#9f0d0d\" mb=\"24px\">\r\n            Pink Shibari Collection\r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"lg\" color=\"#9f0d0d\">\r\n            {TranslateString(999, 'Trade in for ALIFE, or keep for your collection!')}\r\n          </Heading>\r\n          {/* <CustomButton onClick={() => filterNFTs('Base')} mt=\"24px\">\r\n            Base NFTs\r\n          </CustomButton>\r\n          <CustomButton variant=\"success\" onClick={() => filterNFTs('Rare')} mt=\"24px\">\r\n            Rare NFTs\r\n          </CustomButton>\r\n          <CustomButton variant=\"subtle\" onClick={() => filterNFTs('Epic')} mt=\"24px\">\r\n            Epic NFTs\r\n          </CustomButton>\r\n          <GoldenButton onClick={() => filterNFTs('Legendary')} mt=\"24px\">\r\n            Legendary NFTs\r\n          </GoldenButton> */}\r\n        </StyledHero>\r\n\r\n        <NftInfo />\r\n        <NftList data={NFTs} />\r\n      </Page>\r\n    </NftProvider>\r\n  )\r\n}\r\n\r\nexport default Nft\r\n"],"sourceRoot":""}