{"version":3,"sources":["config/constants/newnfts.ts","utils/formatBalance.ts","utils/erc20.ts","hooks/useBlock.ts","utils/callHelpers.ts","hooks/useTokenBalance.ts","hooks/useApprove.ts","hooks/useAllowance.ts","../node_modules/antd/es/_util/styleChecker.js","../node_modules/antd/es/grid/RowContext.js","../node_modules/antd/es/_util/hooks/useFlexGapSupport.js","../node_modules/antd/es/grid/row.js","../node_modules/antd/es/grid/col.js","../node_modules/antd/es/list/Item.js","../node_modules/antd/es/list/index.js","views/NewDetail/components/InfoRow.tsx","views/NewDetail/components/Image.tsx","views/NewDetail/utils/contracts.ts","views/NewDetail/contexts/NftProvider.tsx","views/NewDetail/components/ClaimNftModal.tsx","views/NewDetail/components/BurnNftModal.tsx","views/NewDetail/components/TransferNftModal.tsx","views/NewDetail/components/NftCard/index.tsx","views/NewDetail/index.tsx"],"names":["NftFarm","NFT","AMOUNT_TO_CLAIM","Nfts","name","metadata","description","previewImage","originalImage","fileType","blurImage","sortOrder","nftId","tokenAmount","tokenSupply","nftFarmContract","nftContract","rarity","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","useBlock","useContext","BlockContext","approve","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","res","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useNftApprove","tokenContract","spenderAddress","useNftAllowance","dependency","setAllowance","console","log","fetch","flexGapSupported","RowContext","createContext","canUseDocElement","canUseDom","window","document","documentElement","_React$useState","React","_React$useState2","_slicedToArray","flexible","setFlexible","undefined","flex","createElement","style","display","flexDirection","rowGap","appendChild","body","scrollHeight","removeChild","detectFlexGapSupported","__rest","s","e","t","p","Object","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Row","tuple","props","ref","_classNames","customizePrefixCls","prefixCls","justify","align","className","children","_props$gutter","gutter","wrap","others","_React$useContext","ConfigContext","getPrefixCls","direction","xs","sm","md","lg","xl","xxl","screens","setScreens","supportFlexGap","useFlexGapSupport","gutterRef","token","ResponsiveObserve","subscribe","screen","currentGutter","current","Array","isArray","_typeof","unsubscribe","gutters","results","forEach","g","index","responsiveArray","breakpoint","getGutter","classes","classNames","_defineProperty","concat","rowStyle","horizontalGutter","verticalGutter","marginLeft","marginRight","_gutters","marginTop","marginBottom","rowContext","Provider","_extends","displayName","sizes","Col","_React$useContext2","span","order","offset","push","pull","sizeClassObj","size","_extends2","sizeProps","propSize","mergedStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","test","parseFlex","minWidth","Item","_a","actions","extra","colStyle","ListContext","grid","itemLayout","actionsContent","key","map","action","Element","itemChildren","result","element","count","isItemContainsTextNodeAndNotSingular","cloneElement","Meta","avatar","title","classString","content","Consumer","List","_a$pagination","pagination","_a$bordered","bordered","_a$split","split","loadMore","_a$dataSource","dataSource","header","footer","_a$loading","loading","rowKey","renderItem","locale","rest","paginationObj","defaultCurrent","paginationCurrent","setPaginationCurrent","_React$useState3","defaultPageSize","_React$useState4","paginationSize","setPaginationSize","renderEmpty","keys","triggerPaginationEvent","eventName","page","pageSize","onPaginationChange","onPaginationShowSizeChange","loadingProp","spinning","isLoading","sizeCls","paginationProps","total","largestPage","Math","ceil","paginationContent","Pagination","onChange","onShowSizeChange","splitDataSource","_toConsumableArray","splice","useBreakpoint","currentBreakpoint","columnCount","column","width","maxWidth","childrenContent","minHeight","items","item","renderInnerItem","childrenList","child","renderEmptyHandler","emptyText","renderEmptyFunc","paginationPosition","position","Spin","InfoRow","styled","div","Container","theme","colors","borderColor","StyledImage","img","Image","src","alt","originalLink","href","target","rel","getNftContract","contractOptions","nftAbi","nft","getNewNftContract","nftFarm","getToFloat","v","array","parseInt","getToInt","parseFloat","NftProviderContext","NftProvider","isMounted","useRef","isInitialized","hasClaimed","countBurnt","startBlockNumber","endBlockNumber","totalSupplyDistributed","currentDistributedSupply","nftMap","allowMultipleClaims","priceMultiplier","maxMintPerNft","tokenPerBurn","amounts","myMints","isApproved","state","setState","currentBlock","prevState","error","fetchContractData","multicall","nftFarmV2","params","getMinted","isApprovedForAll","getTokenIdAndNftId","tokenOfOwnerByIndex","tokenId","getNftId","tokenIdPromises","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","fetchNonLoggedInContractData","canBurnNft","getTokenIds","reInitialize","Value","Text","ModalContent","Actions","ClaimNftModal","onSuccess","onDismiss","price","setIsLoading","pendingTx","setPendingTx","setError","TranslateString","useI18n","nftMintingContract","useNFTFarmV2Contract","contraToken","useERC20","cakeBalance","cakeInWallet","handleConfirm","mint","_","round","color","mb","fullWidth","disabled","onClick","BurnNftModal","tokenIds","accepted","setAccepted","useRabbitMintingFarm","burnNFT","alignItems","checked","scale","ml","cursor","variant","Label","label","text","TransferNftModal","setValue","usePancakeRabbits","utils","isAddress","transferFrom","htmlFor","id","type","placeholder","evt","inputValue","isWarning","Header","InfoBlock","Button","attrs","SmallCard","Card","CustomButton","NftCard","isOpen","nftCount","nftBurnCount","minted","setMinted","maxMint","setMaxMint","setPrice","useHistory","setRequestedApproval","firstCharOfAccount","slice","lastCharOfAccount","loggedIn","nftIndex","MINTS","MINTED","walletCanClaim","newFarmContract","nftInfoState","mintedValue","maxMintValue","priceValue","getNftInfoState","isSupplyAvailable","walletOwnsNft","fetchDetails","ChevronUpIcon","ChevronDownIcon","isDataFetched","handleApprove","setApprovalForAll","handleSuccess","useModal","onPresentClaimModal","onPresentTransferModal","isActive","height","loop","autoPlay","muted","kind","outline","mt","open","as","textAlign","StyledHero","textSubtle","StyledNotFound","CustomHeading","Heading","Detail","match","nft1","newnfts","filter","Page"],"mappings":"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","file":"static/js/18.b75d7d27.chunk.js","sourcesContent":["import { Nft } from './types'\r\n\r\nexport const NftFarm = '0xABf2Fb308f3614ECcFa4352Bc874Ef09ABaA7151'\r\nexport const NFT = '0xf426F0aFaf912105C119CbD69aedc9e98643d0A1'\r\nexport const AMOUNT_TO_CLAIM = '10'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Pink Spider',\r\n    metadata: 'tier-NFT-base-dark-chocolate.json',\r\n    description: 'Laws are spider webs through which the big flies pass and the little ones get caught. Honore de Balzac',\r\n    previewImage: 'pink-spider-min.png',\r\n    originalImage:\r\n      'https://gateway.pinata.cloud/ipfs/QmZRVNLGYbjh2DaPuqcaQi51wXSjaxzGjAg24WviM5N8Tj',\r\n    fileType: 'png',\r\n    blurImage: '',\r\n    sortOrder: 0,\r\n    nftId: 100,\r\n    tokenAmount: 10,\r\n    tokenSupply: 2222,\r\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n    rarity: 'Base',\r\n  },\r\n  // {\r\n  //   name: 'Pink Fox',\r\n  //   metadata: 'tier-NFT-base-main-nopaint.json',\r\n  //   description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'pink-fox-min.png',\r\n  //   originalImage:\r\n  //     'https://gateway.pinata.cloud/ipfs/QmeDaRUcV3bp5oa6juNYYrV9G7o2zcKFcrRBJmPJxe6BQL',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 1,\r\n  //   nftId: 101,\r\n  //   tokenAmount: 10,\r\n  //   tokenSupply: 2222,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n  // {\r\n  //   name: 'Pink Bunny',\r\n  //   metadata: 'tier-NFT-base-marble.json',\r\n  //   description:\r\n  //     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'pink-bunny-min.png',\r\n  //   originalImage: 'https://gateway.pinata.cloud/ipfs/QmWh9xNZvyhzQWFp4xFEjbBBXPBuZhYnQufL2HwRBae9Gn',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 2,\r\n  //   nftId: 102,\r\n  //   tokenAmount: 10,\r\n  //   tokenSupply: 2222,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n  // {\r\n  //   name: 'Pink Dragon',\r\n  //   metadata: '',\r\n  //   description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'pink-dragon-min.png',\r\n  //   originalImage:\r\n  //     'https://gateway.pinata.cloud/ipfs/QmUBgkzR5rSLiWH9pgDACayjAQLcCfB8Csn81PVbTdB86t',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 3,\r\n  //   nftId: 103,\r\n  //   tokenAmount: 100,\r\n  //   tokenSupply: 666,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n  // {\r\n  //   name: 'Pink B&B',\r\n  //   metadata: '',\r\n  //   description:\r\n  //     'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eget vehicula massa. Donec fringilla a nibh sed euismod. Nam vitae erat vitae nisl pulvinar lacinia. Ut vitae ultrices diam.',\r\n  //   previewImage: 'bull-and-bear-min.png',\r\n  //   originalImage:\r\n  //     'https://gateway.pinata.cloud/ipfs/QmQ8MkJZzAQYNnUmzVXFmBQAZTXSjjvdvGVF3f16HP7LLW',\r\n  //   fileType: 'png',\r\n  //   blurImage: '',\r\n  //   sortOrder: 4,\r\n  //   nftId: 104,\r\n  //   tokenAmount: 100,\r\n  //   tokenSupply: 666,\r\n  //   nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\r\n  //   nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\r\n  //   rarity: 'Base',\r\n  // },\r\n]\r\n\r\nexport default Nfts\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract(erc20 as unknown as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n\r\n// Approve an NFT\r\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve NFT allowance\r\nexport const useNftAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.log(e.toString())\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import canUseDom from \"rc-util/es/Dom/canUseDom\";\nexport var canUseDocElement = function canUseDocElement() {\n  return canUseDom() && window.document.documentElement;\n};\nexport var isStyleSupport = function isStyleSupport(styleName) {\n  if (canUseDocElement()) {\n    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];\n    var documentElement = window.document.documentElement;\n    return styleNameList.some(function (name) {\n      return name in documentElement.style;\n    });\n  }\n\n  return false;\n};\nvar flexGapSupported;\nexport var detectFlexGapSupported = function detectFlexGapSupported() {\n  if (!canUseDocElement()) {\n    return false;\n  }\n\n  if (flexGapSupported !== undefined) {\n    return flexGapSupported;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  flexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  document.body.removeChild(flex);\n  return flexGapSupported;\n};","import { createContext } from 'react';\nvar RowContext = /*#__PURE__*/createContext({});\nexport default RowContext;","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { detectFlexGapSupported } from '../styleChecker';\nexport default (function () {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      flexible = _React$useState2[0],\n      setFlexible = _React$useState2[1];\n\n  React.useEffect(function () {\n    setFlexible(detectFlexGapSupported());\n  }, []);\n  return flexible;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport RowContext from './RowContext';\nimport { tuple } from '../_util/type';\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nvar RowAligns = tuple('top', 'middle', 'bottom', 'stretch');\nvar RowJustify = tuple('start', 'end', 'center', 'space-around', 'space-between');\nvar Row = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      justify = props.justify,\n      align = props.align,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      _props$gutter = props.gutter,\n      gutter = _props$gutter === void 0 ? 0 : _props$gutter,\n      wrap = props.wrap,\n      others = __rest(props, [\"prefixCls\", \"justify\", \"align\", \"className\", \"style\", \"children\", \"gutter\", \"wrap\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState({\n    xs: true,\n    sm: true,\n    md: true,\n    lg: true,\n    xl: true,\n    xxl: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      screens = _React$useState2[0],\n      setScreens = _React$useState2[1];\n\n  var supportFlexGap = useFlexGapSupport();\n  var gutterRef = React.useRef(gutter); // ================================== Effect ==================================\n\n  React.useEffect(function () {\n    var token = ResponsiveObserve.subscribe(function (screen) {\n      var currentGutter = gutterRef.current || 0;\n\n      if (!Array.isArray(currentGutter) && _typeof(currentGutter) === 'object' || Array.isArray(currentGutter) && (_typeof(currentGutter[0]) === 'object' || _typeof(currentGutter[1]) === 'object')) {\n        setScreens(screen);\n      }\n    });\n    return function () {\n      return ResponsiveObserve.unsubscribe(token);\n    };\n  }, []); // ================================== Render ==================================\n\n  var getGutter = function getGutter() {\n    var results = [0, 0];\n    var normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, 0];\n    normalizedGutter.forEach(function (g, index) {\n      if (_typeof(g) === 'object') {\n        for (var i = 0; i < responsiveArray.length; i++) {\n          var breakpoint = responsiveArray[i];\n\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint];\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  var prefixCls = getPrefixCls('row', customizePrefixCls);\n  var gutters = getGutter();\n  var classes = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-wrap\"), wrap === false), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(justify), justify), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(align), align), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className); // Add gutter related style\n\n  var rowStyle = {};\n  var horizontalGutter = gutters[0] > 0 ? gutters[0] / -2 : undefined;\n  var verticalGutter = gutters[1] > 0 ? gutters[1] / -2 : undefined;\n\n  if (horizontalGutter) {\n    rowStyle.marginLeft = horizontalGutter;\n    rowStyle.marginRight = horizontalGutter;\n  }\n\n  if (supportFlexGap) {\n    // Set gap direct if flex gap support\n    var _gutters = _slicedToArray(gutters, 2);\n\n    rowStyle.rowGap = _gutters[1];\n  } else if (verticalGutter) {\n    rowStyle.marginTop = verticalGutter;\n    rowStyle.marginBottom = verticalGutter;\n  }\n\n  var rowContext = React.useMemo(function () {\n    return {\n      gutter: gutters,\n      wrap: wrap,\n      supportFlexGap: supportFlexGap\n    };\n  }, [gutters, wrap, supportFlexGap]);\n  return /*#__PURE__*/React.createElement(RowContext.Provider, {\n    value: rowContext\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({}, others, {\n    className: classes,\n    style: _extends(_extends({}, rowStyle), style),\n    ref: ref\n  }), children));\n});\nRow.displayName = 'Row';\nexport default Row;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RowContext from './RowContext';\nimport { ConfigContext } from '../config-provider';\n\nfunction parseFlex(flex) {\n  if (typeof flex === 'number') {\n    return \"\".concat(flex, \" \").concat(flex, \" auto\");\n  }\n\n  if (/^\\d+(\\.\\d+)?(px|em|rem|%)$/.test(flex)) {\n    return \"0 0 \".concat(flex);\n  }\n\n  return flex;\n}\n\nvar sizes = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nvar Col = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useContext2 = React.useContext(RowContext),\n      gutter = _React$useContext2.gutter,\n      wrap = _React$useContext2.wrap,\n      supportFlexGap = _React$useContext2.supportFlexGap;\n\n  var customizePrefixCls = props.prefixCls,\n      span = props.span,\n      order = props.order,\n      offset = props.offset,\n      push = props.push,\n      pull = props.pull,\n      className = props.className,\n      children = props.children,\n      flex = props.flex,\n      style = props.style,\n      others = __rest(props, [\"prefixCls\", \"span\", \"order\", \"offset\", \"push\", \"pull\", \"className\", \"children\", \"flex\", \"style\"]);\n\n  var prefixCls = getPrefixCls('col', customizePrefixCls);\n  var sizeClassObj = {};\n  sizes.forEach(function (size) {\n    var _extends2;\n\n    var sizeProps = {};\n    var propSize = props[size];\n\n    if (typeof propSize === 'number') {\n      sizeProps.span = propSize;\n    } else if (_typeof(propSize) === 'object') {\n      sizeProps = propSize || {};\n    }\n\n    delete others[size];\n    sizeClassObj = _extends(_extends({}, sizeClassObj), (_extends2 = {}, _defineProperty(_extends2, \"\".concat(prefixCls, \"-\").concat(size, \"-\").concat(sizeProps.span), sizeProps.span !== undefined), _defineProperty(_extends2, \"\".concat(prefixCls, \"-\").concat(size, \"-order-\").concat(sizeProps.order), sizeProps.order || sizeProps.order === 0), _defineProperty(_extends2, \"\".concat(prefixCls, \"-\").concat(size, \"-offset-\").concat(sizeProps.offset), sizeProps.offset || sizeProps.offset === 0), _defineProperty(_extends2, \"\".concat(prefixCls, \"-\").concat(size, \"-push-\").concat(sizeProps.push), sizeProps.push || sizeProps.push === 0), _defineProperty(_extends2, \"\".concat(prefixCls, \"-\").concat(size, \"-pull-\").concat(sizeProps.pull), sizeProps.pull || sizeProps.pull === 0), _defineProperty(_extends2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _extends2));\n  });\n  var classes = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(span), span !== undefined), _defineProperty(_classNames, \"\".concat(prefixCls, \"-order-\").concat(order), order), _defineProperty(_classNames, \"\".concat(prefixCls, \"-offset-\").concat(offset), offset), _defineProperty(_classNames, \"\".concat(prefixCls, \"-push-\").concat(push), push), _defineProperty(_classNames, \"\".concat(prefixCls, \"-pull-\").concat(pull), pull), _classNames), className, sizeClassObj);\n  var mergedStyle = {}; // Horizontal gutter use padding\n\n  if (gutter && gutter[0] > 0) {\n    var horizontalGutter = gutter[0] / 2;\n    mergedStyle.paddingLeft = horizontalGutter;\n    mergedStyle.paddingRight = horizontalGutter;\n  } // Vertical gutter use padding when gap not support\n\n\n  if (gutter && gutter[1] > 0 && !supportFlexGap) {\n    var verticalGutter = gutter[1] / 2;\n    mergedStyle.paddingTop = verticalGutter;\n    mergedStyle.paddingBottom = verticalGutter;\n  }\n\n  if (flex) {\n    mergedStyle.flex = parseFlex(flex); // Hack for Firefox to avoid size issue\n    // https://github.com/ant-design/ant-design/pull/20023#issuecomment-564389553\n\n    if (flex === 'auto' && wrap === false && !mergedStyle.minWidth) {\n      mergedStyle.minWidth = 0;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, others, {\n    style: _extends(_extends({}, mergedStyle), style),\n    className: classes,\n    ref: ref\n  }), children);\n});\nCol.displayName = 'Col';\nexport default Col;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ListContext } from './index';\nimport { Col } from '../grid';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nexport var Meta = function Meta(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      avatar = _a.avatar,\n      title = _a.title,\n      description = _a.description,\n      others = __rest(_a, [\"prefixCls\", \"className\", \"avatar\", \"title\", \"description\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('list', customizePrefixCls);\n  var classString = classNames(\"\".concat(prefixCls, \"-item-meta\"), className);\n  var content = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-meta-content\")\n  }, title && /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"\".concat(prefixCls, \"-item-meta-title\")\n  }, title), description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-meta-description\")\n  }, description));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, others, {\n    className: classString\n  }), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-meta-avatar\")\n  }, avatar), (title || description) && content);\n};\n\nvar Item = function Item(_a) {\n  var customizePrefixCls = _a.prefixCls,\n      children = _a.children,\n      actions = _a.actions,\n      extra = _a.extra,\n      className = _a.className,\n      colStyle = _a.colStyle,\n      others = __rest(_a, [\"prefixCls\", \"children\", \"actions\", \"extra\", \"className\", \"colStyle\"]);\n\n  var _React$useContext2 = React.useContext(ListContext),\n      grid = _React$useContext2.grid,\n      itemLayout = _React$useContext2.itemLayout;\n\n  var _React$useContext3 = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext3.getPrefixCls;\n\n  var isItemContainsTextNodeAndNotSingular = function isItemContainsTextNodeAndNotSingular() {\n    var result;\n    React.Children.forEach(children, function (element) {\n      if (typeof element === 'string') {\n        result = true;\n      }\n    });\n    return result && React.Children.count(children) > 1;\n  };\n\n  var isFlexMode = function isFlexMode() {\n    if (itemLayout === 'vertical') {\n      return !!extra;\n    }\n\n    return !isItemContainsTextNodeAndNotSingular();\n  };\n\n  var prefixCls = getPrefixCls('list', customizePrefixCls);\n  var actionsContent = actions && actions.length > 0 && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"\".concat(prefixCls, \"-item-action\"),\n    key: \"actions\"\n  }, actions.map(function (action, i) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(\"li\", {\n        key: \"\".concat(prefixCls, \"-item-action-\").concat(i)\n      }, action, i !== actions.length - 1 && /*#__PURE__*/React.createElement(\"em\", {\n        className: \"\".concat(prefixCls, \"-item-action-split\")\n      }))\n    );\n  }));\n  var Element = grid ? 'div' : 'li';\n  var itemChildren = /*#__PURE__*/React.createElement(Element, _extends({}, others, {\n    // `li` element `onCopy` prop args is not same as `div`\n    className: classNames(\"\".concat(prefixCls, \"-item\"), _defineProperty({}, \"\".concat(prefixCls, \"-item-no-flex\"), !isFlexMode()), className)\n  }), itemLayout === 'vertical' && extra ? [/*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-main\"),\n    key: \"content\"\n  }, children, actionsContent), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-item-extra\"),\n    key: \"extra\"\n  }, extra)] : [children, actionsContent, cloneElement(extra, {\n    key: 'extra'\n  })]);\n  return grid ? /*#__PURE__*/React.createElement(Col, {\n    flex: 1,\n    style: colStyle\n  }, itemChildren) : itemChildren;\n};\n\nItem.Meta = Meta;\nexport default Item;","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Spin from '../spin';\nimport useBreakpoint from '../grid/hooks/useBreakpoint';\nimport { responsiveArray } from '../_util/responsiveObserve';\nimport { ConfigContext } from '../config-provider';\nimport Pagination from '../pagination';\nimport { Row } from '../grid';\nimport Item from './Item';\nexport var ListContext = /*#__PURE__*/React.createContext({});\nexport var ListConsumer = ListContext.Consumer;\n\nfunction List(_a) {\n  var _classNames;\n\n  var _a$pagination = _a.pagination,\n      pagination = _a$pagination === void 0 ? false : _a$pagination,\n      customizePrefixCls = _a.prefixCls,\n      _a$bordered = _a.bordered,\n      bordered = _a$bordered === void 0 ? false : _a$bordered,\n      _a$split = _a.split,\n      split = _a$split === void 0 ? true : _a$split,\n      className = _a.className,\n      children = _a.children,\n      itemLayout = _a.itemLayout,\n      loadMore = _a.loadMore,\n      grid = _a.grid,\n      _a$dataSource = _a.dataSource,\n      dataSource = _a$dataSource === void 0 ? [] : _a$dataSource,\n      size = _a.size,\n      header = _a.header,\n      footer = _a.footer,\n      _a$loading = _a.loading,\n      loading = _a$loading === void 0 ? false : _a$loading,\n      rowKey = _a.rowKey,\n      renderItem = _a.renderItem,\n      locale = _a.locale,\n      rest = __rest(_a, [\"pagination\", \"prefixCls\", \"bordered\", \"split\", \"className\", \"children\", \"itemLayout\", \"loadMore\", \"grid\", \"dataSource\", \"size\", \"header\", \"footer\", \"loading\", \"rowKey\", \"renderItem\", \"locale\"]);\n\n  var paginationObj = pagination && _typeof(pagination) === 'object' ? pagination : {};\n\n  var _React$useState = React.useState(paginationObj.defaultCurrent || 1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      paginationCurrent = _React$useState2[0],\n      setPaginationCurrent = _React$useState2[1];\n\n  var _React$useState3 = React.useState(paginationObj.defaultPageSize || 10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      paginationSize = _React$useState4[0],\n      setPaginationSize = _React$useState4[1];\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      renderEmpty = _React$useContext.renderEmpty,\n      direction = _React$useContext.direction;\n\n  var defaultPaginationProps = {\n    current: 1,\n    total: 0\n  };\n  var keys = {};\n\n  var triggerPaginationEvent = function triggerPaginationEvent(eventName) {\n    return function (page, pageSize) {\n      setPaginationCurrent(page);\n      setPaginationSize(pageSize);\n\n      if (pagination && pagination[eventName]) {\n        pagination[eventName](page, pageSize);\n      }\n    };\n  };\n\n  var onPaginationChange = triggerPaginationEvent('onChange');\n  var onPaginationShowSizeChange = triggerPaginationEvent('onShowSizeChange');\n\n  var renderInnerItem = function renderInnerItem(item, index) {\n    if (!renderItem) return null;\n    var key;\n\n    if (typeof rowKey === 'function') {\n      key = rowKey(item);\n    } else if (typeof rowKey === 'string') {\n      key = item[rowKey];\n    } else {\n      key = item.key;\n    }\n\n    if (!key) {\n      key = \"list-item-\".concat(index);\n    }\n\n    keys[index] = key;\n    return renderItem(item, index);\n  };\n\n  var isSomethingAfterLastItem = function isSomethingAfterLastItem() {\n    return !!(loadMore || pagination || footer);\n  };\n\n  var renderEmptyFunc = function renderEmptyFunc(prefixCls, renderEmptyHandler) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-empty-text\")\n    }, locale && locale.emptyText || renderEmptyHandler('List'));\n  };\n\n  var prefixCls = getPrefixCls('list', customizePrefixCls);\n  var loadingProp = loading;\n\n  if (typeof loadingProp === 'boolean') {\n    loadingProp = {\n      spinning: loadingProp\n    };\n  }\n\n  var isLoading = loadingProp && loadingProp.spinning; // large => lg\n  // small => sm\n\n  var sizeCls = '';\n\n  switch (size) {\n    case 'large':\n      sizeCls = 'lg';\n      break;\n\n    case 'small':\n      sizeCls = 'sm';\n      break;\n\n    default:\n      break;\n  }\n\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-vertical\"), itemLayout === 'vertical'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), _defineProperty(_classNames, \"\".concat(prefixCls, \"-split\"), split), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), isLoading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-grid\"), !!grid), _defineProperty(_classNames, \"\".concat(prefixCls, \"-something-after-last-item\"), isSomethingAfterLastItem()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var paginationProps = _extends(_extends(_extends({}, defaultPaginationProps), {\n    total: dataSource.length,\n    current: paginationCurrent,\n    pageSize: paginationSize\n  }), pagination || {});\n\n  var largestPage = Math.ceil(paginationProps.total / paginationProps.pageSize);\n\n  if (paginationProps.current > largestPage) {\n    paginationProps.current = largestPage;\n  }\n\n  var paginationContent = pagination ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-pagination\")\n  }, /*#__PURE__*/React.createElement(Pagination, _extends({}, paginationProps, {\n    onChange: onPaginationChange,\n    onShowSizeChange: onPaginationShowSizeChange\n  }))) : null;\n\n  var splitDataSource = _toConsumableArray(dataSource);\n\n  if (pagination) {\n    if (dataSource.length > (paginationProps.current - 1) * paginationProps.pageSize) {\n      splitDataSource = _toConsumableArray(dataSource).splice((paginationProps.current - 1) * paginationProps.pageSize, paginationProps.pageSize);\n    }\n  }\n\n  var screens = useBreakpoint();\n  var currentBreakpoint = React.useMemo(function () {\n    for (var i = 0; i < responsiveArray.length; i += 1) {\n      var breakpoint = responsiveArray[i];\n\n      if (screens[breakpoint]) {\n        return breakpoint;\n      }\n    }\n\n    return undefined;\n  }, [screens]);\n  var colStyle = React.useMemo(function () {\n    if (!grid) {\n      return undefined;\n    }\n\n    var columnCount = currentBreakpoint && grid[currentBreakpoint] ? grid[currentBreakpoint] : grid.column;\n\n    if (columnCount) {\n      return {\n        width: \"\".concat(100 / columnCount, \"%\"),\n        maxWidth: \"\".concat(100 / columnCount, \"%\")\n      };\n    }\n  }, [grid === null || grid === void 0 ? void 0 : grid.column, currentBreakpoint]);\n  var childrenContent = isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: 53\n    }\n  });\n\n  if (splitDataSource.length > 0) {\n    var items = splitDataSource.map(function (item, index) {\n      return renderInnerItem(item, index);\n    });\n    var childrenList = React.Children.map(items, function (child, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: keys[index],\n        style: colStyle\n      }, child);\n    });\n    childrenContent = grid ? /*#__PURE__*/React.createElement(Row, {\n      gutter: grid.gutter\n    }, childrenList) : /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"\".concat(prefixCls, \"-items\")\n    }, items);\n  } else if (!children && !isLoading) {\n    childrenContent = renderEmptyFunc(prefixCls, renderEmpty);\n  }\n\n  var paginationPosition = paginationProps.position || 'bottom';\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      grid: grid,\n      itemLayout: itemLayout\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classString\n  }, rest), (paginationPosition === 'top' || paginationPosition === 'both') && paginationContent, header && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\")\n  }, header), /*#__PURE__*/React.createElement(Spin, loadingProp, childrenContent, children), footer && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-footer\")\n  }, footer), loadMore || (paginationPosition === 'bottom' || paginationPosition === 'both') && paginationContent));\n}\n\nList.Item = Item;\nexport default List;","import styled from 'styled-components'\r\n\r\nconst InfoRow = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default InfoRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface ImageProps {\r\n  src: string\r\n  alt: string\r\n  originalLink?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  position: relative;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 100%;\r\n`\r\n\r\nconst StyledImage = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transition: opacity 1s linear;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 32px 32px 0 0;\r\n`\r\n\r\nconst Image: React.FC<ImageProps> = ({ src, alt, originalLink }) => {\r\n  const previewImage = <StyledImage src={src} alt={alt} />\r\n\r\n  return (\r\n    <Container>\r\n      {originalLink ? (\r\n        <a href={originalLink} target=\"_blank\" rel=\"noreferrer noopener\">\r\n          {previewImage}\r\n        </a>\r\n      ) : (\r\n        previewImage\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","import { AbiItem, fromWei } from 'web3-utils'\r\nimport { getContract } from 'utils/web3'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport nftFarm from 'config/abi/NftFarmV2.json'\r\nimport nft from 'config/abi/NFT.json'\r\nimport { NftFarm, NFT } from 'config/constants/newnfts'\r\nimport BigNumber from 'bignumber.js'\r\n// TODO: Figure out how to add current account to contracts to write methods can be used\r\n\r\nexport const getNftMintingContract = (contractOptions?: ContractOptions) => {\r\n  const nftMintingFarmAbi = nftFarm as unknown as AbiItem\r\n  return getContract(nftMintingFarmAbi, NftFarm, contractOptions)\r\n}\r\n\r\nexport const getNftContract = (contractOptions?: ContractOptions) => {\r\n  const nftAbi = nft as unknown as AbiItem\r\n  return getContract(nftAbi, NFT, contractOptions)\r\n}\r\n\r\nexport const getNewNftContract = (contractOptions?: ContractOptions) => {\r\n  const nftAbi = nftFarm as unknown as AbiItem\r\n  return getContract(nftAbi, NftFarm, contractOptions)\r\n}\r\n\r\nexport const getFromWei = (v: any) => {\r\n  if (!v) return 0\r\n  return parseFloat(fromWei(v.toString(), 'ether'))\r\n}\r\n\r\nexport const getFromWayArray = (v: any) => {\r\n  if (!v) return []\r\n  const array = []\r\n  const t = v.length\r\n  for (let i = 0; i < t; i++) {\r\n    if (!v[i]) {\r\n      array.push(0)\r\n    } else {\r\n      array.push(fromWei(v[i].toString(), 'ether'))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport const getToFloat = (v: any) => {\r\n  if (!v) return []\r\n  const array = []\r\n  if (!v) return []\r\n  const t = v.length\r\n  for (let i = 0; i < t; i++) {\r\n    if (!v[i]) {\r\n      array.push(0)\r\n    } else {\r\n      array.push(parseInt(v[i].toString()))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport const getToInt = (v: any) => {\r\n  const array = []\r\n  if (!v) return []\r\n  const t = v.length\r\n  for (let i = 0; i < t; i++) {\r\n    if (!v[i]) {\r\n      array.push(0)\r\n    } else {\r\n      array.push(parseFloat(v[i].toString()))\r\n    }\r\n  }\r\n  return array\r\n}\r\n\r\nexport default getNftMintingContract\r\n","import React, { createContext, ReactNode, useEffect, useRef, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useBlock from 'hooks/useBlock'\r\nimport nftFarmV2 from 'config/abi/NftFarmV2.json'\r\nimport { NftFarm } from 'config/constants/newnfts'\r\nimport multicall from 'utils/multicall'\r\nimport { getNftContract, getFromWei, getToFloat, getToInt, getFromWayArray } from '../utils/contracts'\r\n\r\ninterface NftProviderProps {\r\n  children: ReactNode\r\n}\r\n\r\ntype NftMap = {\r\n  [key: number]: number[]\r\n}\r\n\r\ntype State = {\r\n  isInitialized: boolean\r\n  hasClaimed: number[]\r\n  amounts: number[]\r\n  myMints: number[]\r\n  countBurnt: number\r\n  endBlockNumber: number\r\n  startBlockNumber: number\r\n  totalSupplyDistributed: number\r\n  currentDistributedSupply: number\r\n  balanceOf: number\r\n  nftMap: NftMap\r\n\r\n  allowMultipleClaims: boolean\r\n  rarity: string\r\n  priceMultiplier: number\r\n  maxMintPerNft: number\r\n  tokenPerBurn: number\r\n  isApproved: boolean\r\n}\r\n\r\ntype Context = {\r\n  canBurnNft: boolean\r\n  getTokenIds: (nftId: number) => number[]\r\n  reInitialize: () => void\r\n} & State\r\n\r\nexport const NftProviderContext = createContext<Context | null>(null)\r\n\r\nconst NftProvider: React.FC<NftProviderProps> = ({ children }) => {\r\n  const isMounted = useRef(true)\r\n  const [state, setState] = useState<State>({\r\n    isInitialized: false,\r\n    hasClaimed: [],\r\n    countBurnt: 0,\r\n    startBlockNumber: 0,\r\n    endBlockNumber: 0,\r\n    totalSupplyDistributed: 0,\r\n    currentDistributedSupply: 0,\r\n    balanceOf: 0,\r\n    nftMap: {},\r\n\r\n    allowMultipleClaims: true,\r\n    rarity: '',\r\n    priceMultiplier: 0,\r\n    maxMintPerNft: 0,\r\n    tokenPerBurn: 0,\r\n\r\n    amounts: [],\r\n    myMints: [],\r\n    isApproved: false,\r\n  })\r\n  const { account } = useWallet()\r\n  const currentBlock = useBlock()\r\n\r\n  const { isInitialized } = state\r\n\r\n  // Static data\r\n  useEffect(() => {\r\n    const fetchContractData = async () => {\r\n      try {\r\n        // const [\r\n        //   // startBlockNumberArr,\r\n        //   // endBlockNumberArr,\r\n        //   // countBurntArr,\r\n        //   // totalSupplyDistributedArr,\r\n        //   // currentDistributedSupplyArr,\r\n\r\n        //   // allowMultipleClaimsArr,\r\n        //   // rarityArr,\r\n        //   // priceMultiplierArr,\r\n        //   // maxMintPerNftArr,\r\n        //   // tokenPerBurnArr,\r\n        // ] = await multicall(nftFarm, [\r\n        //   // { address: NftFarm, name: 'startBlockNumber' },\r\n        //   // { address: NftFarm, name: 'endBlockNumber' },\r\n        //   // { address: NftFarm, name: 'countBurnt' },\r\n        //   // { address: NftFarm, name: 'totalSupplyDistributed' },\r\n        //   // { address: NftFarm, name: 'currentDistributedSupply' },\r\n        //   // { address: NftFarm, name: 'allowMultipleClaims' },\r\n        //   // { address: NftFarm, name: 'rarity' },\r\n        //   // { address: NftFarm, name: 'priceMultiplier' },\r\n        //   // { address: NftFarm, name: 'maxMintPerNft' },\r\n        //   // { address: NftFarm, name: 'tokenPerBurn' },\r\n        // ])\r\n\r\n        // TODO: Figure out why these are coming back as arrays\r\n        // const [startBlockNumber]: [BigNumber] = startBlockNumberArr\r\n        // const [endBlockNumber]: [BigNumber] = endBlockNumberArr\r\n        // const [countBurnt]: [BigNumber] = countBurntArr\r\n        // const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\r\n        // const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isInitialized: true,\r\n          // countBurnt: countBurnt.toNumber(),\r\n          // startBlockNumber: startBlockNumber.toNumber(),\r\n          // endBlockNumber: endBlockNumber.toNumber(),\r\n          // currentDistributedSupply: currentDistributedSupply.toNumber(),\r\n          // totalSupplyDistributed: totalSupplyDistributed.toNumber(),\r\n          // allowMultipleClaims: allowMultipleClaimsArr[0],\r\n          // rarity: rarityArr[0].toString(),\r\n          // priceMultiplier: parseFloat(priceMultiplierArr[0].toString()),\r\n          // maxMintPerNft: parseInt(maxMintPerNftArr[0].toString()),\r\n          // tokenPerBurn: getFromWei(tokenPerBurnArr[0]),\r\n        }))\r\n      } catch (error) {\r\n        console.error('an error occured', error)\r\n      }\r\n    }\r\n\r\n    fetchContractData()\r\n  }, [isInitialized, setState])\r\n\r\n  // Data from the contract that needs an account\r\n  useEffect(() => {\r\n    const fetchContractData = async () => {\r\n      try {\r\n        const nftContract = getNftContract()\r\n\r\n        const getMinted = await multicall(nftFarmV2, [{ address: NftFarm, name: 'getMinted', params: [account] }])\r\n\r\n        const hasClaimed = getMinted[0][0]\r\n        const amounts = getToFloat(getMinted[0][1])\r\n        const myMints = getToInt(getMinted[0][2])\r\n\r\n        // console.log('hasClaimed', hasClaimed)\r\n        // console.log('amounts', amounts)\r\n        // console.log('myMints', myMints)\r\n\r\n        const balanceOf = await nftContract.methods.balanceOf(account).call()\r\n\r\n        let nftMap: NftMap = {}\r\n\r\n        const isApproved = await nftContract.methods.isApprovedForAll(account, NftFarm).call()\r\n        // If the \"balanceOf\" is greater than 0 then retrieve the tokenIds\r\n        // owned by the wallet, then the nftId's associated with the tokenIds\r\n        if (balanceOf > 0) {\r\n          const getTokenIdAndNftId = async (index: number) => {\r\n            try {\r\n              const tokenId = await nftContract.methods.tokenOfOwnerByIndex(account, index).call()\r\n              const nftId = await nftContract.methods.getNftId(tokenId).call()\r\n\r\n              return [parseInt(nftId, 10), parseInt(tokenId, 10)]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndNftId(i))\r\n          }\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n\r\n          // While improbable a wallet can own more than one of the same nft so the format is:\r\n          // { [nftId]: [array of tokenIds] }\r\n          nftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [nftId, tokenId] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [nftId]: accum[nftId] ? [...accum[nftId], tokenId] : [tokenId],\r\n            }\r\n          }, {})\r\n        }\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isInitialized: true,\r\n          hasClaimed,\r\n          balanceOf,\r\n          nftMap,\r\n\r\n          amounts,\r\n          myMints,\r\n          isApproved,\r\n        }))\r\n      } catch (error) {\r\n        console.error('an error occured', error)\r\n      }\r\n    }\r\n\r\n    const fetchNonLoggedInContractData = async () => {\r\n      try {\r\n        const getMinted = await multicall(nftFarmV2, [\r\n          { address: NftFarm, name: 'getMinted', params: ['0x0000000000000000000000000000000000000000'] },\r\n        ])\r\n        const hasClaimed = getMinted[0][0]\r\n        const amounts = getToFloat(getMinted[0][1])\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isInitialized: true,\r\n          hasClaimed,\r\n          amounts,\r\n        }))\r\n      } catch (error) {\r\n        console.error('an error occured', error)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchContractData()\r\n    } else {\r\n      fetchNonLoggedInContractData()\r\n    }\r\n  }, [isInitialized, account, setState])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false\r\n    }\r\n  }, [isMounted])\r\n\r\n  const canBurnNft = currentBlock <= state.endBlockNumber\r\n  const getTokenIds = (nftId: number) => state.nftMap[nftId]\r\n\r\n  /**\r\n   * Allows consumers to re-fetch all data from the contract. Triggers the effects.\r\n   * For example when a transaction has been completed\r\n   */\r\n  const reInitialize = () => {\r\n    // Only attempt to re-initialize if the component is still mounted\r\n    // Transactions can take awhile so it is likely some users will navigate to another page\r\n    // before the transaction is finished\r\n    if (isMounted.current) {\r\n      setState((prevState) => ({ ...prevState, isInitialized: false }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NftProviderContext.Provider value={{ ...state, canBurnNft, getTokenIds, reInitialize }}>\r\n      {children}\r\n    </NftProviderContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NftProvider\r\n","import React, { useEffect, useState } from 'react'\r\nimport _ from 'lodash'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { NftFarm, AMOUNT_TO_CLAIM } from 'config/constants/newnfts'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useERC20, useNFTFarmV2Contract } from 'hooks/useContract'\r\nimport BigNumber from 'bignumber.js'\r\nimport InfoRow from './InfoRow'\r\nimport { useNftAllowance } from '../../../hooks/useAllowance'\r\nimport { useNftApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ClaimNftModalProps {\r\n  nft: Nft\r\n  onSuccess: () => any  \r\n  onDismiss?: () => void,\r\n  price?: BigNumber\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss, price }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const nftMintingContract = useNFTFarmV2Contract(NftFarm)\r\n  const contraToken = useERC20(getCakeAddress())\r\n  const allowance = useNftAllowance(contraToken, NftFarm, pendingTx)\r\n  const onApprove = useNftApprove(contraToken, NftFarm)\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const cakeInWallet = getBalanceNumber(cakeBalance)\r\n\r\n  // console.log('getCakeAddress', getCakeAddress(), NftFarm, allowance)\r\n  // console.log('allowance', allowance)\r\n\r\n  const handleConfirm = async () => {\r\n    if (allowance === null) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      await nftMintingContract.methods\r\n        .mint(nft.nftId)\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          onDismiss()\r\n          onSuccess()\r\n        })\r\n        .on('error', () => {\r\n          console.error(error)\r\n          setError('Unable to claim NFT')\r\n          setIsLoading(false)\r\n        })\r\n    } catch (err) {\r\n      console.error('Unable to mint NFT:', err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cakeInWallet === 0) {\r\n      setError(`You must have ALIFE balance to claim NFT`)\r\n    }\r\n  }, [cakeInWallet, setError])\r\n\r\n  return (\r\n    <Modal title={`Claim NFT for ${_.round(parseFloat(price.toString()))} ALIFE`} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button\r\n          fullWidth\r\n          disabled={!account || pendingTx || isLoading || allowance > 0}\r\n          onClick={async () => {\r\n            try {\r\n              setPendingTx(true)\r\n              await onApprove()\r\n              setPendingTx(false)\r\n            } catch (e) {\r\n              setPendingTx(false)\r\n              console.error(e)\r\n            }\r\n          }}\r\n        >\r\n          Approve\r\n        </Button>\r\n\r\n        <Button\r\n          fullWidth\r\n          onClick={handleConfirm}\r\n          disabled={!account || isLoading || cakeInWallet <= 0 || allowance <= 0}\r\n        >\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimNftModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Checkbox, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport { NftFarm, AMOUNT_TO_CLAIM } from 'config/constants/newnfts'\r\nimport { useRabbitMintingFarm } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface BurnNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst BurnNftModal: React.FC<BurnNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [accepted, setAccepted] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const nftMintingContract = useRabbitMintingFarm(NftFarm)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const [tokenId] = tokenIds\r\n\r\n      await nftMintingContract.methods\r\n        .burnNFT(tokenId)\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          onDismiss()\r\n          onSuccess()\r\n        })\r\n        .on('error', () => {\r\n          console.error(error)\r\n          setError('Unable to burn NFT')\r\n          setIsLoading(false)\r\n        })\r\n    } catch (err) {\r\n      console.error('Unable to burn NFT:', err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Trade in NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Trade in')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\r\n          <Value>${AMOUNT_TO_CLAIM} ALIFE</Value>\r\n        </InfoRow>\r\n      </ModalContent>\r\n      <ModalContent>\r\n        <Text color=\"failure\">\r\n          {TranslateString(999, 'When you trade in this NFT to receive ALIFE, you will lose access to it forever!')}\r\n        </Text>\r\n        <Text color=\"failure\">{TranslateString(999, 'It will be burned and removed from circulation')}</Text>\r\n      </ModalContent>\r\n      <ModalContent style={{ alignItems: 'center', display: 'inline-flex' }}>\r\n        <Checkbox checked={accepted} scale=\"sm\" onChange={() => setAccepted(!accepted)} />\r\n        <Text ml=\"8px\" onClick={() => setAccepted(!accepted)} style={{ cursor: 'pointer' }}>\r\n          {TranslateString(999, 'I understand')}\r\n        </Text>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !accepted}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BurnNftModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Web3 from 'web3'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Button, Input, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport { NFT } from 'config/constants/newnfts'\r\nimport { Nft } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface TransferNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const nftContract = usePancakeRabbits(NFT)\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const isValidAddress = Web3.utils.isAddress(value)\r\n\r\n      if (!isValidAddress) {\r\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\r\n      } else {\r\n        await nftContract.methods\r\n          .transferFrom(account, value, tokenIds[0])\r\n          .send({ from: account })\r\n          .on('sending', () => {\r\n            setIsLoading(true)\r\n          })\r\n          .on('receipt', () => {\r\n            onDismiss()\r\n            onSuccess()\r\n          })\r\n          .on('error', () => {\r\n            console.error(error)\r\n            setError('Unable to transfer NFT')\r\n            setIsLoading(false)\r\n          })\r\n      }\r\n    } catch (err) {\r\n      console.error('Unable to transfer NFT:', err)\r\n    }\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(inputValue)\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\r\n        <Input\r\n          id=\"transferAddress\"\r\n          name=\"address\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(999, 'Paste address')}\r\n          value={value}\r\n          onChange={handleChange}\r\n          isWarning={error}\r\n          disabled={isLoading}\r\n        />\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !value}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransferNftModal\r\n","import React, { useState, useContext, useCallback, useEffect } from 'react'\r\nimport _ from 'lodash'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n} from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { List } from 'antd'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport { AMOUNT_TO_CLAIM, NftFarm, NFT } from 'config/constants/newnfts'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport InfoRow from '../InfoRow'\r\nimport Image from '../Image'\r\nimport { NftProviderContext } from '../../contexts/NftProvider'\r\nimport { getNewNftContract } from '../../utils/contracts'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport BurnNftModal from '../BurnNftModal'\r\nimport TransferNftModal from '../TransferNftModal'\r\n\r\ninterface NftCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst StyledNotFound = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 64px);\r\n  justify-content: center;\r\n`\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 28px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 0 24px 24px;\r\n`\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst SmallCard = styled(Card)`\r\n  width: 500px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 767px) {\r\n    width: 320px;\r\n  }\r\n`\r\n\r\nconst CustomButton = styled(Button)`\r\n  margin-left: 10px;\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isOpen: true,\r\n    nftCount: 0,\r\n    nftBurnCount: 0,\r\n  })\r\n  const [minted, setMinted] = useState(0)\r\n  const [maxMint, setMaxMint] = useState(0)\r\n  const [price, setPrice] = useState(new BigNumber(0))\r\n  const TranslateString = useI18n()\r\n  const {\r\n    isInitialized,\r\n    hasClaimed,\r\n    canBurnNft,\r\n    totalSupplyDistributed,\r\n    currentDistributedSupply,\r\n    getTokenIds,\r\n    reInitialize,\r\n    allowMultipleClaims,\r\n    rarity,\r\n    priceMultiplier,\r\n    maxMintPerNft,\r\n    tokenPerBurn,\r\n    amounts,\r\n    myMints,\r\n    isApproved,\r\n  } = useContext(NftProviderContext)\r\n  const { account } = useWallet()\r\n  const history = useHistory()\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const [error, setError] = useState(null)\r\n  // maxMintPerNft limit max amount that a nft can be minted\r\n  // maxMintByNft array containing individual amount of mint per nft index\r\n  // prices array containing individual prices of a mint per nft index\r\n  // tokenPerBurn global price\r\n\r\n  const { nftId, name, previewImage, originalImage, description, tokenAmount, fileType, tokenSupply } = nft\r\n\r\n  const firstCharOfAccount = account != null && account.slice(0, 4)\r\n  const lastCharOfAccount = account != null && account.slice(-4)\r\n\r\n  const accountName = account != null && `${firstCharOfAccount}...${lastCharOfAccount}`\r\n\r\n  const loggedIn = account !== null\r\n\r\n  // console.log('?hasClaimed', hasClaimed)\r\n  // console.log('?ownerById', ownerById)\r\n\r\n  const nftIndex = hasClaimed && hasClaimed.indexOf(nftId)\r\n\r\n  const MINTS = myMints[nftIndex] || 0\r\n\r\n  // not sure about this, you need to check if this oser own this nft in the view nft page.\r\n  // const youAreTheLastOwner = ownerById && ownerById[nftIndex] && ownerById[nftIndex].toString() === account.toString()\r\n\r\n  const MINTED = amounts[nftIndex] ? parseInt(amounts[nftIndex].toString()) : 0\r\n\r\n  const walletCanClaim = MINTED === undefined || MINTED < maxMint\r\n\r\n  // console.log('CONTRACT/GALLERY INFO:', totalSupplyDistributed, rarity, priceMultiplier, maxMintPerNft, tokenPerBurn)\r\n  // console.log('LIMITS BY NFT:', tokenPerBurn, amounts, maxMintByNft, prices)\r\n  // console.log(nftId, 'walletCanClaim', walletCanClaim, maxMintPerNft, MINTED, MAX_MINT)\r\n\r\n  const tokenIds = getTokenIds(nftId)\r\n  // const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\r\n\r\n  useEffect(() => {\r\n    const getNftInfoState = async () => {\r\n      const newFarmContract = getNewNftContract()\r\n      const nftInfoState = await newFarmContract.methods.nftInfoState(nftId).call()\r\n      const { minted: mintedValue, maxMint: maxMintValue, price: priceValue } = nftInfoState\r\n      setMinted(parseInt(mintedValue))\r\n      setMaxMint(parseInt(maxMintValue))\r\n      setPrice(new BigNumber(priceValue).div(new BigNumber(10).pow(18)))\r\n    }\r\n    getNftInfoState()\r\n  })\r\n\r\n  const isSupplyAvailable = minted < maxMint\r\n  // const walletOwnsNft = tokenIds && tokenIds.length > 0\r\n  const walletOwnsNft = MINTS > 0\r\n\r\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    setState((prevState) => ({ ...prevState, isLoading: true }))\r\n    try {\r\n      const { methods } = getNewNftContract()\r\n      const nftCount = await methods.nftCount(nftId).call()\r\n      const nftBurnCount = await methods.nftBurnCount(nftId).call()\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n        nftCount: parseInt(nftCount, 10),\r\n        nftBurnCount: parseInt(nftBurnCount, 10),\r\n      }))\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }, [nftId])\r\n\r\n  const handleClick = async () => {\r\n    if (state.isOpen) {\r\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n    } else {\r\n      try {\r\n        await fetchDetails()\r\n      } catch (err) {\r\n        console.error(err)\r\n      } finally {\r\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const nftContract = usePancakeRabbits(NFT)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setState((prevState) => ({ ...prevState, isLoading: true }))\r\n      setRequestedApproval(true)\r\n      await nftContract.methods\r\n        .setApprovalForAll(NftFarm, 'true')\r\n        .send({ from: account })\r\n        .on('sending', () => {\r\n          setIsLoading(true)\r\n        })\r\n        .on('receipt', () => {\r\n          console.log('receipt')\r\n        })\r\n        .on('error', () => {\r\n          setError('Unable to transfer NFT')\r\n          setIsLoading(false)\r\n        })\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: false,\r\n        isDataFetched: true,\r\n      }))\r\n\r\n      fetchDetails()\r\n      reInitialize()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [account, nftContract, reInitialize, fetchDetails])\r\n\r\n  const handleSuccess = () => {\r\n    fetchDetails()\r\n    reInitialize()\r\n  }\r\n\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} price={price} onSuccess={handleSuccess} />)\r\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\r\n  const [onPresentTransferModal] = useModal(\r\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\r\n  )\r\n\r\n  return (\r\n    <SmallCard isActive={walletOwnsNft}>\r\n      {fileType === 'mp4' && (\r\n        <video height=\"500px\" width=\"100%\" loop autoPlay muted>\r\n          <source src={originalImage} type=\"video/mp4\" />\r\n          <track kind=\"captions\" />\r\n        </video>\r\n      )}\r\n      {fileType !== 'mp4' && (\r\n        <Image src={originalImage} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\r\n      )}\r\n      <CardBody>\r\n        <Header>\r\n          <Heading>{name}</Heading>\r\n          {isInitialized && walletCanClaim && (\r\n            <Tag outline variant=\"success\">\r\n              {TranslateString(526, 'Available')}\r\n            </Tag>\r\n          )}\r\n          {isInitialized && !walletCanClaim && (\r\n            <Tag outline variant=\"failure\">\r\n              Sold Out\r\n            </Tag>\r\n          )}\r\n          {isInitialized && loggedIn && walletOwnsNft && (\r\n            <Tag outline variant=\"secondary\">\r\n              {TranslateString(999, 'In Wallet')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {isInitialized && loggedIn && walletCanClaim && isSupplyAvailable && (\r\n          <Button onClick={onPresentClaimModal} mt=\"24px\">\r\n            {TranslateString(999, 'Claim this NFT')} for {_.round(parseFloat(price.toString()))} ALIFE\r\n          </Button>\r\n        )}\r\n        {isInitialized && walletCanClaim && isSupplyAvailable && (\r\n          <CustomButton\r\n            onClick={() =>\r\n              window.open(\r\n                'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x42bA7BbDDEcb471c1e1Fe08636918952b6C19019',\r\n                '_blank',\r\n              )\r\n            }\r\n            mt=\"24px\"\r\n          >\r\n            {TranslateString(999, 'Buy ALIFE')}\r\n          </CustomButton>\r\n        )}\r\n        {isInitialized && loggedIn && walletOwnsNft && !isApproved && (\r\n          <Button\r\n            fullWidth\r\n            variant=\"primary\"\r\n            mt=\"24px\"\r\n            onClick={() => {\r\n              handleApprove()\r\n            }}\r\n          >\r\n            Approve Transfer\r\n          </Button>\r\n        )}\r\n        {isInitialized && loggedIn && walletOwnsNft && isApproved && (\r\n          <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {TranslateString(999, 'Transfer')}\r\n          </Button>\r\n        )}\r\n        {/* {isInitialized && canBurnNft && walletOwnsNft && (\r\n          <Button variant=\"danger\" fullWidth onClick={onPresentBurnModal} mt=\"24px\">\r\n            {TranslateString(999, 'Trade in for ALIFE')}\r\n          </Button>\r\n        )} */}\r\n      </CardBody>\r\n      <CardFooter p=\"2\">\r\n        {state.isOpen && (\r\n          <InfoBlock>\r\n            <List\r\n              size=\"small\"\r\n              dataSource={description.split('.')}\r\n              renderItem={(item) => (\r\n                <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'left' }}>\r\n                  {item}\r\n                </Text>\r\n              )}\r\n            />\r\n            <InfoRow>\r\n              <Text>{TranslateString(999, 'Number minted')}:</Text>\r\n              <Value>\r\n                {MINTED}/{maxMint}\r\n              </Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Text>Owned By Me:</Text>\r\n              <Value>{MINTS}</Value>\r\n            </InfoRow>\r\n          </InfoBlock>\r\n        )}\r\n      </CardFooter>\r\n    </SmallCard>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, LogoIcon, Text, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport newnfts from 'config/constants/newnfts'\r\nimport NftCard from './components/NftCard'\r\nimport NftList from './components/NftList'\r\nimport NftProvider from './contexts/NftProvider'\r\nimport NftInfo from './components/NftInfo'\r\n\r\nconst StyledHero = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst StyledNotFound = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100vh - 64px);\r\n  justify-content: center;\r\n`\r\n\r\nconst CustomHeading = styled(Heading)`\r\n  text-align: center;\r\n`\r\n\r\nconst Detail = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { match } = props\r\n  const id = parseInt(match.params.id)\r\n\r\n  const nft1 = newnfts.filter((nft) => nft.nftId === id)\r\n\r\n  if (nft1[0]) {\r\n    return (\r\n      <NftProvider>\r\n        <Page>\r\n          <StyledHero>\r\n            <CustomHeading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {nft1[0] && nft1[0].name}\r\n            </CustomHeading>\r\n          </StyledHero>\r\n          <NftCard nft={nft1[0]} />\r\n        </Page>\r\n      </NftProvider>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <StyledNotFound>\r\n        <LogoIcon width=\"64px\" mb=\"8px\" />\r\n        <Heading size=\"xxl\">404</Heading>\r\n        <Text mb=\"16px\">{TranslateString(999, 'Oops, page not found.')}</Text>\r\n        <Button as=\"a\" href=\"/\" size=\"sm\">\r\n          {TranslateString(999, 'Back Home')}\r\n        </Button>\r\n      </StyledNotFound>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n"],"sourceRoot":""}